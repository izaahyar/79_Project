@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model _79_Project.ViewModel.Transaction.CreateEditViewModel
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "addEditForm", name = "addEditForm", @class = "general-table-form" }))
{
    <div class="window-body">
        <div class="form-group">
            <label for="Customer">Customer:</label>

            @(Html.Kendo().DropDownListFor(e=>e.AccountId)
                .HtmlAttributes(new { @class = "form-control" })
                .OptionLabel("Select Customer...")
                .DataTextField("Text")
                .DataValueField("Value")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetCustomer", "Report2");
                    });
                })
				)
        </div>
        <div class="form-group">
            <label for="Transaction">Transaction Date:</label>
            <input type="date" class="form-control" id="Transaction">
        </div>
        <div class="form-group">
            <label for="Description">Description:</label>
            @(Html.Kendo().DropDownListFor(e=>e.Description)
                .HtmlAttributes(new { @class = "form-control" })
                .OptionLabel("Select Customer...")
                .DataTextField("Text")
                .DataValueField("Value")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetDescription", "Transaction");
                    });
                })
				)
        </div>
        <div class="form-group">
            <label for="Status">Status:</label>
            @(Html.Kendo().DropDownListFor(e=>e.Status)
                .HtmlAttributes(new { @class = "form-control" })
                .OptionLabel("Select Customer...")
                .DataTextField("Text")
                .DataValueField("Value")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetStatus", "Transaction");
                    });
                })
				)
        </div>
        <div class="form-group">
            <label for="Amount">Amount:</label>
            <input type="number" class="form-control" id="Amount">
        </div>
    </div>
    <div class="window-footer">
        <div class="btn-wrapper">
            <button type="button" id="btnSave" name="btnSave" class="btn btn-secondary" onclick="SaveData()">Save</button>
            <button type="button" id="btnClose" name="btnClose" class="btn btn-secondary btn-sm" onclick="BacktoIndex()">Cancel</button>

        </div>
    </div>


}
<script>
    function BacktoIndex() {
        window.location.href = "/Payroll/TerminationPeriod";
    }

    function SaveData() {
        $("#btnProcess").disableBtn();
        $("#btnSave").disableBtn();
        var url = "";
        if ($("#ID").val() == "") {
            url = "/Transaction/Save";
        } else {
            url = "/Transaction/Update";
        }
        var formData = new FormData($('#addEditForm')[0]);
        $.ajax({
            type: "POST",
            url: url,
            data: formData,
            contentType: false,
            cache: false,
            processData: false,
            success: function (result) {
                if (result.IsSuccess) {
                    window.location.href = "/";
                }
            }
        });
    }
</script>